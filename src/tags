!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BLACK	./include/console.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN,$/;"	e	enum:COLOUR_ATTR
BLACK	./include/kernel/scr.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, WHITE,$/;"	e	enum:COLOUR_TAG
BLANK_ATTR	./include/kernel/scr.h	17;"	d
BLANK_CHAR	./include/kernel/scr.h	16;"	d
BLUE	./include/console.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN,$/;"	e	enum:COLOUR_ATTR
BLUE	./include/kernel/scr.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, WHITE,$/;"	e	enum:COLOUR_TAG
BOOTSEG	./boot/boot.s	/^BOOTSEG equ 0x07c0$/;"	d
BRIGHT_WHITE	./include/kernel/scr.h	/^	LIGHT_RED, LIGHT_MAGENTA, YELLOW, BRIGHT_WHITE$/;"	e	enum:COLOUR_TAG
BROWN	./include/console.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN,$/;"	e	enum:COLOUR_ATTR
BROWN	./include/kernel/scr.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, WHITE,$/;"	e	enum:COLOUR_TAG
CHAR_OFF	./include/kernel/scr.h	19;"	d
COLOUR	./include/console.h	/^} COLOUR;$/;"	t	typeref:enum:COLOUR_ATTR
COLOUR	./include/kernel/scr.h	/^} COLOUR;$/;"	t	typeref:enum:COLOUR_TAG
COLOUR_ATTR	./include/console.h	/^typedef enum COLOUR_ATTR$/;"	g
COLOUR_TAG	./include/kernel/scr.h	/^typedef enum COLOUR_TAG {$/;"	g
CONSOLE_H	./include/console.h	2;"	d
CYAN	./include/console.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN,$/;"	e	enum:COLOUR_ATTR
CYAN	./include/kernel/scr.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, WHITE,$/;"	e	enum:COLOUR_TAG
DARK_GRAY	./include/console.h	/^	LIGHT_GRAY, DARK_GRAY, LIGHT_BLUE, LIGHT_GREEN,$/;"	e	enum:COLOUR_ATTR
ENDSEG	./boot/boot.s	/^ENDSEG equ SYSSEG + SYSSIZE$/;"	d
GDT_CODE	./include/descriptors.h	17;"	d
GDT_DATA	./include/descriptors.h	18;"	d
GDT_NULL	./include/descriptors.h	16;"	d
GDT_TMP	./include/descriptors.h	19;"	d
GRAY	./include/kernel/scr.h	/^	GRAY, LIGHT_BLUE, LIGHT_GREEN, LIGHT_CYAN, $/;"	e	enum:COLOUR_TAG
GREEN	./include/console.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN,$/;"	e	enum:COLOUR_ATTR
GREEN	./include/kernel/scr.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, WHITE,$/;"	e	enum:COLOUR_TAG
INITSEG	./boot/boot.s	/^INITSEG equ 0x9000$/;"	d
KPL_DUMP	./include/kernel/printk.h	/^enum KP_LEVEL { KPL_DUMP, KPL_PANIC };$/;"	e	enum:KP_LEVEL
KPL_PANIC	./include/kernel/printk.h	/^enum KP_LEVEL { KPL_DUMP, KPL_PANIC };$/;"	e	enum:KP_LEVEL
KPRINT_H	./include/kprint.h	2;"	d
KP_LEVEL	./include/kernel/printk.h	/^enum KP_LEVEL { KPL_DUMP, KPL_PANIC };$/;"	g
LDT_CODE	./include/descriptors.h	22;"	d
LDT_DATA	./include/descriptors.h	23;"	d
LDT_NULL	./include/descriptors.h	21;"	d
LIBCC_H	./include/kernel/libcc.h	4;"	d
LIGHT_BLUE	./include/console.h	/^	LIGHT_GRAY, DARK_GRAY, LIGHT_BLUE, LIGHT_GREEN,$/;"	e	enum:COLOUR_ATTR
LIGHT_BLUE	./include/kernel/scr.h	/^	GRAY, LIGHT_BLUE, LIGHT_GREEN, LIGHT_CYAN, $/;"	e	enum:COLOUR_TAG
LIGHT_CYAN	./include/console.h	/^	LIGHT_CYAN, LIGHT_RED, LIGHT_MAGENTA, YELLOW, WHITE$/;"	e	enum:COLOUR_ATTR
LIGHT_CYAN	./include/kernel/scr.h	/^	GRAY, LIGHT_BLUE, LIGHT_GREEN, LIGHT_CYAN, $/;"	e	enum:COLOUR_TAG
LIGHT_GRAY	./include/console.h	/^	LIGHT_GRAY, DARK_GRAY, LIGHT_BLUE, LIGHT_GREEN,$/;"	e	enum:COLOUR_ATTR
LIGHT_GREEN	./include/console.h	/^	LIGHT_GRAY, DARK_GRAY, LIGHT_BLUE, LIGHT_GREEN,$/;"	e	enum:COLOUR_ATTR
LIGHT_GREEN	./include/kernel/scr.h	/^	GRAY, LIGHT_BLUE, LIGHT_GREEN, LIGHT_CYAN, $/;"	e	enum:COLOUR_TAG
LIGHT_MAGENTA	./include/console.h	/^	LIGHT_CYAN, LIGHT_RED, LIGHT_MAGENTA, YELLOW, WHITE$/;"	e	enum:COLOUR_ATTR
LIGHT_MAGENTA	./include/kernel/scr.h	/^	LIGHT_RED, LIGHT_MAGENTA, YELLOW, BRIGHT_WHITE$/;"	e	enum:COLOUR_TAG
LIGHT_RED	./include/console.h	/^	LIGHT_CYAN, LIGHT_RED, LIGHT_MAGENTA, YELLOW, WHITE$/;"	e	enum:COLOUR_ATTR
LIGHT_RED	./include/kernel/scr.h	/^	LIGHT_RED, LIGHT_MAGENTA, YELLOW, BRIGHT_WHITE$/;"	e	enum:COLOUR_TAG
LINE_RAM	./include/kernel/scr.h	12;"	d
MAGENTA	./include/console.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN,$/;"	e	enum:COLOUR_ATTR
MAGENTA	./include/kernel/scr.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, WHITE,$/;"	e	enum:COLOUR_TAG
MAX_COLUMNS	./include/console.h	5;"	d
MAX_COLUMNS	./include/kernel/scr.h	5;"	d
MAX_LINES	./include/console.h	4;"	d
MAX_LINES	./include/kernel/scr.h	4;"	d
NULL	./include/kernel/libcc.h	6;"	d
PAGE_RAM	./include/kernel/scr.h	14;"	d
RED	./include/console.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN,$/;"	e	enum:COLOUR_ATTR
RED	./include/kernel/scr.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, WHITE,$/;"	e	enum:COLOUR_TAG
SCR_H	./include/kernel/scr.h	2;"	d
SYSSEG	./boot/boot.s	/^SYSSEG  equ 0x1000$/;"	d
SYSSIZE	./boot/boot.s	/^SYSSIZE equ 0x7000$/;"	d
SYS_CODE_SEL	./boot/boot.s	/^SYS_CODE_SEL equ $ - gdt$/;"	d
SYS_CODE_SEL_2	./boot/boot.s	/^SYS_CODE_SEL_2 equ $ - gdt$/;"	d
SYS_DATA_SEL	./boot/boot.s	/^SYS_DATA_SEL equ $ - gdt$/;"	d
SYS_DATA_SEL_2	./boot/boot.s	/^SYS_DATA_SEL_2 equ $ - gdt$/;"	d
TAB_WIDTH	./include/console.h	13;"	d
TAB_WIDTH	./include/kernel/scr.h	6;"	d
TOTALSECTORS	./boot/boot.s	/^TOTALSECTORS equ 18$/;"	d
VIDEO_RAM	./include/kernel/scr.h	10;"	d
VRAM	./include/console.h	9;"	d
VRAM_LINE	./include/console.h	7;"	d
VRAM_OFFSET	./include/console.h	11;"	d
WHITE	./include/console.h	/^	LIGHT_CYAN, LIGHT_RED, LIGHT_MAGENTA, YELLOW, WHITE$/;"	e	enum:COLOUR_ATTR
WHITE	./include/kernel/scr.h	/^	BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, WHITE,$/;"	e	enum:COLOUR_TAG
YELLOW	./include/console.h	/^	LIGHT_CYAN, LIGHT_RED, LIGHT_MAGENTA, YELLOW, WHITE$/;"	e	enum:COLOUR_ATTR
YELLOW	./include/kernel/scr.h	/^	LIGHT_RED, LIGHT_MAGENTA, YELLOW, BRIGHT_WHITE$/;"	e	enum:COLOUR_TAG
_DESCRIPTORS__INCLUDED_	./include/descriptors.h	2;"	d
_PRINTK__INCLUDED_	./include/kernel/printk.h	2;"	d
_arg_stack_size	./kernel/printk.c	5;"	d	file:
a	./include/descriptors.h	/^	unsigned long a, b;$/;"	m	struct:desc_struct
args_end	./kernel/printk.c	12;"	d	file:
args_list	./kernel/printk.c	3;"	d	file:
args_next	./kernel/printk.c	14;"	d	file:
args_start	./kernel/printk.c	8;"	d	file:
assert	./include/kernel/libcc.h	17;"	d
b	./include/descriptors.h	/^	unsigned long a, b;$/;"	m	struct:desc_struct
bcopy	./include/kernel/libcc.h	/^void bcopy(const void *src, void *dest, unsigned int n);$/;"	p
bcopy	./kernel/libcc.c	/^bcopy(const void *src, void *dest, unsigned int n) {$/;"	f
boom	./boot/setup.s	/^boom:$/;"	l
bounds_check	./kernel/traps.c	/^bounds_check(void) {$/;"	f
breakpoint	./kernel/traps.c	/^breakpoint(void) {$/;"	f
buf	./kernel/printk.c	/^static char buf[1024] = { -1 };$/;"	v	file:
bzero	./include/kernel/libcc.h	/^void bzero(void *dest, unsigned int n);$/;"	p
bzero	./kernel/libcc.c	/^bzero(void *dest, unsigned int n) {$/;"	f
cop_not_avalid	./kernel/traps.c	/^cop_not_avalid(void) {$/;"	f
coprocessor_error	./kernel/traps.c	/^coprocessor_error(void) {$/;"	f
csr_x	./kernel/scr.c	/^static int csr_x = 0;$/;"	v	file:
csr_y	./kernel/scr.c	/^static int csr_y = 0;$/;"	v	file:
cur_x	./kernel/console.c	/^static int cur_x = 0;$/;"	v	file:
cur_y	./kernel/console.c	/^static int cur_y = 0;$/;"	v	file:
debug_exception	./kernel/traps.c	/^debug_exception(void) {$/;"	f
desc_struct	./include/descriptors.h	/^typedef struct desc_struct$/;"	s
desc_struct::a	./include/descriptors.h	/^	unsigned long a, b;$/;"	m	struct:desc_struct
desc_struct::b	./include/descriptors.h	/^	unsigned long a, b;$/;"	m	struct:desc_struct
desc_table	./include/descriptors.h	/^} desc_table[256];$/;"	t	typeref:struct:desc_struct
divide_error	./kernel/traps.c	/^divide_error(void) {$/;"	f
do_pm	./boot/boot.s	/^do_pm:$/;"	l
double_fault	./kernel/traps.c	/^double_fault(void) {$/;"	f
dw	./boot/boot.s	/^dw 0xaa55 ; bootcode stamp$/;"	l
end_kernel_move	./boot/boot.s	/^end_kernel_move:$/;"	l
gdt	./boot/boot.s	/^gdt:$/;"	l
gdt	./boot/setup.s	/^gdt:$/;"	l
gdt_descr	./boot/setup.s	/^gdt_descr:$/;"	l
gdt_end	./boot/boot.s	/^gdt_end:$/;"	l
gdtr	./boot/boot.s	/^gdtr:$/;"	l
general_protection	./kernel/traps.c	/^general_protection(void) {$/;"	f
get_cursor	./include/console.h	/^void get_cursor(int *x, int *y);$/;"	p
get_cursor	./include/kernel/scr.h	/^void get_cursor(int *, int *);$/;"	p
get_cursor	./kernel/console.c	/^void get_cursor(int *x, int *y);$/;"	p	file:
hang	./boot/boot.s	/^hang:$/;"	l
head	./boot/boot.s	/^head dw 0$/;"	d
idt	./boot/boot.s	/^idt:$/;"	l
idt	./boot/setup.s	/^idt:$/;"	l
idt_descr	./boot/setup.s	/^idt_descr:$/;"	l
idt_end	./boot/boot.s	/^idt_end:$/;"	l
idtr	./boot/boot.s	/^idtr:$/;"	l
ignore_int	./boot/setup.s	/^ignore_int:$/;"	l
inb	./include/asm/io.h	4;"	d
inb_p	./include/asm/io.h	16;"	d
invalid_opcode	./kernel/traps.c	/^invalid_opcode(void) {$/;"	f
invalid_tss	./kernel/traps.c	/^invalid_tss(void) {$/;"	f
load_kernel	./boot/boot.s	/^load_kernel:$/;"	l
main	./init/main.c	/^int main()$/;"	f
main	./kernel/print.c	/^void main(void)$/;"	f
memcmp	./include/kernel/libcc.h	/^int memcmp(const void *s1, const void *s2, unsigned int n);$/;"	p
memcmp	./kernel/libcc.c	/^memcmp(const void *s1, const void *s2, unsigned int n) {$/;"	f
memcpy	./include/kernel/libcc.h	/^void *memcpy(void *dest, const void *src, unsigned int n);$/;"	p
memcpy	./kernel/libcc.c	/^memcpy(void *dest, const void *src, unsigned int n) {$/;"	f
memset	./include/kernel/libcc.h	/^void *memset(void *dest, int c, unsigned int n);$/;"	p
memset	./kernel/libcc.c	/^memset(void *dest, int c, unsigned int n) {$/;"	f
move_boot	./boot/boot.s	/^move_boot:$/;"	l
move_kernel	./boot/boot.s	/^move_kernel:$/;"	l
msg	./boot/boot.s	/^msg db 13,10,'Loading System...',13,10,0$/;"	d
msg	./boot/setup.s	/^msg:$/;"	l
nmi	./kernel/traps.c	/^nmi(void) {$/;"	f
outb	./include/asm/io.h	1;"	d
outb_p	./include/asm/io.h	10;"	d
overflow	./kernel/traps.c	/^overflow(void) {$/;"	f
overrun	./kernel/traps.c	/^overrun(void) {$/;"	f
page_fault	./kernel/traps.c	/^page_fault(void) {$/;"	f
parse_hex	./kernel/printk.c	/^static void parse_hex(unsigned int value)$/;"	f	file:
parse_num	./kernel/printk.c	/^static void parse_num(unsigned int value, unsigned int base)$/;"	f	file:
pause	./kernel/print.c	/^void pause(void)$/;"	f
pg0	./boot/setup.s	/^pg0:$/;"	l
pg1	./boot/setup.s	/^pg1:$/;"	l
pg2	./boot/setup.s	/^pg2:$/;"	l
pg_dir	./boot/setup.s	/^pg_dir:$/;"	l
pic_install	./kernel/print.c	/^static void pic_install(void)$/;"	f	file:
pop	./boot/boot.s	/^	pop dx$/;"	d
print_c	./include/kernel/scr.h	/^void print_c(char, COLOUR, COLOUR);$/;"	p
print_c	./kernel/scr.c	/^print_c(char c, COLOUR fg, COLOUR bg) {$/;"	f
print_char	./include/console.h	/^void print_char(char c, COLOUR fg, COLOUR bkg);$/;"	p
print_char	./kernel/console.c	/^void print_char(char c, COLOUR fg, COLOUR bkg)$/;"	f
printk	./include/kernel/printk.h	/^void printk(enum KP_LEVEL lvl, const char *fmt, ...);$/;"	p
printk	./include/kprint.h	/^void printk(enum KP_LEVEL log_lvl, const char *fmt, ...);$/;"	p
printk	./kernel/printk.c	/^void printk(enum KP_LEVEL lvl, const char *fmt, ...)$/;"	f
ptr	./kernel/printk.c	/^static int ptr = -1;$/;"	v	file:
push	./boot/boot.s	/^	push dx$/;"	d
putstr	./boot/boot.s	/^putstr:$/;"	l
read_sectors	./boot/boot.s	/^read_sectors:$/;"	l
repeat	./boot/setup.s	/^repeat:$/;"	l
repeat_load_idt	./boot/setup.s	/^repeat_load_idt:$/;"	l
reversed	./kernel/traps.c	/^reversed(void) {$/;"	f
scroll	./kernel/scr.c	/^scroll(int lines) {$/;"	f	file:
scroll_down	./kernel/console.c	/^static void scroll_down(unsigned int lines)$/;"	f	file:
sectors	./boot/boot.s	/^sectors dw 1$/;"	d
seg_not_present	./kernel/traps.c	/^seg_not_present(void) {$/;"	f
set_cursor	./include/console.h	/^void set_cursor(int x, int y);$/;"	p
set_cursor	./include/kernel/scr.h	/^void set_cursor(int, int);$/;"	p
set_cursor	./kernel/console.c	/^void set_cursor(int x, int y)$/;"	f
set_cursor	./kernel/scr.c	/^set_cursor(int x, int y) {$/;"	f
setup_gdt	./boot/setup.s	/^setup_gdt:$/;"	l
setup_idt	./boot/setup.s	/^setup_idt:$/;"	l
setup_paging	./boot/setup.s	/^setup_paging:$/;"	l
stack_exception	./kernel/traps.c	/^stack_exception(void) {$/;"	f
start	./boot/boot.s	/^start:$/;"	l
start_main	./boot/setup.s	/^start_main:$/;"	l
startup_32	./boot/setup.s	/^startup_32:$/;"	l
stop_motor	./boot/boot.s	/^stop_motor:$/;"	l
strcmp	./include/kernel/libcc.h	/^int strcmp(const char *s1, const char *s2);$/;"	p
strcmp	./kernel/libcc.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	./include/kernel/libcc.h	/^char *strcpy(char *dest, const char *src);$/;"	p
strcpy	./kernel/libcc.c	/^strcpy(char *dest, const char *src) {$/;"	f
strlen	./include/kernel/libcc.h	/^unsigned int strlen(const char *s);$/;"	p
strlen	./kernel/libcc.c	/^strlen(const char *s) {$/;"	f
times	./boot/boot.s	/^times 510-($-$$) db 0$/;"	l
track	./boot/boot.s	/^track dw 0$/;"	d
uint16_t	./include/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	./include/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint8_t	./include/types.h	/^typedef unsigned char uint8_t;$/;"	t
va_end	./kernel/kprint.c	12;"	d	file:
va_next	./kernel/kprint.c	9;"	d	file:
va_rounded_size	./kernel/kprint.c	3;"	d	file:
va_start	./kernel/kprint.c	6;"	d	file:
